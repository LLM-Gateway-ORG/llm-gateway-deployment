version: "3.8"

services:
  backend:
    image: subhomoy/llm-gateway-backend:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=(Host(`llmgateway.oderna.in`) && PathPrefix(`/api`))"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.tls.certresolver=dns-cloudflare"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.backend-headers.headers.customresponseheaders.X-Frame-Options=SAMEORIGIN"
      - "traefik.http.middlewares.backend-headers.headers.customresponseheaders.X-XSS-Protection=1; mode=block"
      - "traefik.http.middlewares.backend-headers.headers.customresponseheaders.X-Content-Type-Options=nosniff"
      - "traefik.http.middlewares.backend-rate-limit.ratelimit.average=5"
      - "traefik.http.middlewares.backend-rate-limit.ratelimit.burst=10"
      - "traefik.http.middlewares.backend-strip-prefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.backend.middlewares=backend-headers,backend-rate-limit,backend-strip-prefix"
      - "com.centurylinklabs.watchtower.enable=true"
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    entrypoint: ["sh", "./entrypoint.sh"]
    volumes:
      - static_volume:/usr/src/main/static
      - media_volume:/usr/src/main/media
    env_file:
      - .envs/.backend
    environment:
      - DEBUG=0
      - MODE=server
      - PORT=8000
      - DATABASE=postgres
      - SECRET_KEY=v6nvsn^*dh5d839)^dp1y2s+3q06o&u^4hm@3msf)50s+^t@1p
    networks:
      - common_network
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
      # resources:
      #   limits:
      #     cpus: "0.5"
      #     memory: 512M
      #   reservations:
      #     cpus: "0.5"
      #     memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  console:
    image: subhomoy/llm-gateway-console:latest-${BUILD_TAG}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.console.rule=Host(`llmgateway.oderna.in`)"
      - "traefik.http.routers.console.entrypoints=websecure"
      - "traefik.http.services.console.loadbalancer.server.port=3000"
      - "traefik.http.routers.console.tls=true"
      - "traefik.http.routers.console.tls.certresolver=dns-cloudflare"
      - "traefik.http.middlewares.console-headers.headers.customresponseheaders.X-Frame-Options=SAMEORIGIN"
      - "traefik.http.middlewares.console-headers.headers.customresponseheaders.X-XSS-Protection=1; mode=block"
      - "traefik.http.middlewares.console-headers.headers.customresponseheaders.X-Content-Type-Options=nosniff"
      - "traefik.http.routers.console.middlewares=console-headers"
      - "com.centurylinklabs.watchtower.enable=true"
    networks:
      - common_network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: on-failure
      # resources:
      #   limits:
      #     cpus: "0.25"
      #     memory: 256M
      #   reservations:
      #     cpus: "0.25"
      #     memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  traefik:
    image: traefik:v3.1
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entrypoint.to=websecure"
      - "--entryPoints.web.http.redirections.entrypoint.scheme=https"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=subhomoyrchoudhury@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - mode: host
        protocol: tcp
        published: 8080
        target: 8080
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    volumes:
      - letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - common_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: any

  watchtower:
    image: containrrr/watchtower
    networks:
      - common_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--label-enable"
      - "--interval"
      - "30"
      - "--rolling-restart"
    deploy:
      replicas: 1
      restart_policy:
        condition: any

networks:
  common_network:
    driver: overlay
    attachable: true

volumes:
  letsencrypt:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
