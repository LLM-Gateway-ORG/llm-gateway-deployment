version: "3.8"

services:
  backend:
    image: subhomoy/llm-gateway-backend:latest
    command: gunicorn main.wsgi:application --bind 0.0.0.0:8000
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - static_volume:/usr/src/main/static
      - media_volume:/usr/src/main/media
    env_file:
      - .envs/.backend
    environment:
      - DEBUG=0
      - MODE=server
      - PORT=8000
      - DATABASE=postgres
      - SECRET_KEY=v6nvsn^*dh5d839)^dp1y2s+3q06o&u^4hm@3msf)50s+^t@1p
    networks:
      - nginx_network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
      resources:
        limits:
          cpus: "1"
          memory: 1G
        reservations:
          cpus: "0.5"
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthz/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  console:
    image: subhomoy/llm-gateway-console:latest
    networks:
      - nginx_network
    env_file:
      - .envs/.console
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.5"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    ports:
      - published: 80
        target: 8000
        mode: host
    volumes:
      - ./nginx/:/etc/nginx/conf.d
      - static_volume:/usr/src/main/static
      - media_volume:/usr/src/main/media
      - ./nginx/wait-for-services.sh:/wait-for-services.sh
    entrypoint: ["/bin/sh", "/wait-for-services.sh"]
    depends_on:
      - backend
      - console
    networks:
      - nginx_network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "0.2"
          memory: 128M
        reservations:
          cpus: "0.1"
          memory: 64M
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  nginx_network:
    driver: overlay
    attachable: true

volumes:
  static_volume:
    driver: local
  media_volume:
    driver: local
